{"is_source_file": true, "format": "JavaScript", "description": "This file defines a notesService module that provides CRUD operations for notes. It interacts with a backend API if available, otherwise it uses local storage to persist notes. The module includes functions for listing, creating, updating, and deleting notes, with fallback mechanisms and utility functions for generating timestamps and IDs.", "external_files": ["./apiClient", "../utils/storage"], "external_methods": ["apiClient", "hasBackend", "genId", "loadNotes", "saveNotes"], "published": ["notesService"], "classes": [], "methods": [{"name": "nowIso()", "description": "Returns the current date and time as an ISO string.", "scope": "", "scopeKind": ""}, {"name": "apiList()", "description": "Fetches the list of notes from the API endpoint '/notes'.", "scope": "", "scopeKind": ""}, {"name": "apiCreate(data)", "description": "Creates a new note via the API with the provided data.", "scope": "", "scopeKind": ""}, {"name": "apiUpdate(id, data)", "description": "Updates an existing note via the API with the specified ID and data.", "scope": "", "scopeKind": ""}, {"name": "apiDelete(id)", "description": "Deletes a note via the API with the specified ID.", "scope": "", "scopeKind": ""}, {"name": "create({ title = '', content = '' })", "scope": "notesService", "scopeKind": "class", "description": "unavailable"}, {"name": "list()", "scope": "notesService", "scopeKind": "class", "description": "unavailable"}, {"name": "remove(id)", "scope": "notesService", "scopeKind": "class", "description": "unavailable"}, {"name": "update(id, { title = '', content = '' })", "scope": "notesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["apiClient('/notes')", "apiClient('/notes', { method: 'POST', body: JSON.stringify(data) })", "apiClient(`/notes/${id}`, { method: 'PUT', body: JSON.stringify(data) })", "apiClient(`/notes/${id}`, { method: 'DELETE' })", "hasBackend()", "loadNotes()", "saveNotes()", "genId()", "nowIso()"], "search-terms": ["notesService", "CRUD", "localStorage fallback", "API interaction", "notes management"], "state": 2, "file_id": 22, "knowledge_revision": 59, "git_revision": "83d6141ef4e6ae66e348cec68e715492142c7d63", "revision_history": [{"52": ""}, {"59": "83d6141ef4e6ae66e348cec68e715492142c7d63"}], "ctags": [{"_type": "tag", "name": "apiCreate", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^async function apiCreate(data) { return apiClient('\\/notes', { method: 'POST', body: JSON.string/", "language": "JavaScript", "kind": "function", "signature": "(data)"}, {"_type": "tag", "name": "apiDelete", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^async function apiDelete(id) { return apiClient(`\\/notes\\/${id}`, { method: 'DELETE' }); }$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "apiList", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^async function apiList() { return apiClient('\\/notes'); }$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "apiUpdate", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^async function apiUpdate(id, data) { return apiClient(`\\/notes\\/${id}`, { method: 'PUT', body: J/", "language": "JavaScript", "kind": "function", "signature": "(id, data)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^      content: content.trim(),$/", "language": "JavaScript", "kind": "property", "scope": "notesService.create.note", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^  async create({ title = '', content = '' }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ title = '', content = '' })", "scope": "notesService", "scopeKind": "class"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^      createdAt: nowIso(),$/", "language": "JavaScript", "kind": "property", "scope": "notesService.create.note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^      id: genId(),$/", "language": "JavaScript", "kind": "property", "scope": "notesService.create.note", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^  async list() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "notesService", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^    const note = {$/", "language": "JavaScript", "kind": "class", "scope": "notesService.create", "scopeKind": "class"}, {"_type": "tag", "name": "notesService", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^const notesService = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "nowIso", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^function nowIso() { return new Date().toISOString(); }$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^  async remove(id) {$/", "language": "JavaScript", "kind": "method", "signature": "(id)", "scope": "notesService", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^      title: title.trim(),$/", "language": "JavaScript", "kind": "property", "scope": "notesService.create.note", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^    const payload = { title, content };$/", "language": "JavaScript", "kind": "field", "scope": "notesService.create.payload", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^  async update(id, { title = '', content = '' }) {$/", "language": "JavaScript", "kind": "method", "signature": "(id, { title = '', content = '' })", "scope": "notesService", "scopeKind": "class"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/note-keeper-37492-37501/notes_frontend/src/services/notesService.js", "pattern": "/^      updatedAt: nowIso(),$/", "language": "JavaScript", "kind": "property", "scope": "notesService.create.note", "scopeKind": "class"}], "hash": "e98249a20347a035d60db816e577901c", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/notesService.js", "fields": [{"name": "content: content.trim(),", "scope": "notesService.create.note", "scopeKind": "class", "description": "unavailable"}, {"name": "createdAt: nowIso(),", "scope": "notesService.create.note", "scopeKind": "class", "description": "unavailable"}, {"name": "id: genId(),", "scope": "notesService.create.note", "scopeKind": "class", "description": "unavailable"}, {"name": "title: title.trim(),", "scope": "notesService.create.note", "scopeKind": "class", "description": "unavailable"}, {"name": "const payload = { title, content };", "scope": "notesService.create.payload", "scopeKind": "class", "description": "unavailable"}, {"name": "updatedAt: nowIso(),", "scope": "notesService.create.note", "scopeKind": "class", "description": "unavailable"}]}